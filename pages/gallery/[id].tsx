import { Web3Storage } from 'web3.storage';
import { chainId } from 'wagmi';
import { connect, Connection } from '@tableland/sdk';
import { SetStateAction, useEffect, useState } from 'react';
import { useRouter } from 'next/router';
import { ConnectButton } from '@rainbow-me/rainbowkit';
import Head from 'next/head';
import ImageUploading from 'react-images-uploading';
import Image from 'next/image';

// // Construct with token and endpoint

const picsCIPs = [
    'bafybeicgdakkl7q52sm4mydwsx4itbmphtouxlubsk7uueiyu72khcjjgm',
    'bafybeibw3igythqgj4adpkdshy57ony4jw2xrj4v2wse4zjnwvxa7hgaaq',
];

export default function Gallery() {
    // Establish a connection
    const [tablelandConnection, setTablelandConnection] =
        useState<Connection>();
    const [images, setImages] = useState([]);
    const [pics, setPics] = useState<string[]>([]);

    const router = useRouter();
    const { id } = router.query;

    const onChange = (imageList: any, addUpdateIndex: any) => {
        // data for submit
        console.log(imageList, addUpdateIndex);
        console.log('image list: ', imageList);
        setImages(imageList);
    };

    const client = new Web3Storage({
        token: process.env.NEXT_PUBLIC_WEB3_STORAGE_API_KEY!,
        endpoint: new URL('https://api.web3.storage'),
    });

    const uploadImage = async (imageIndex: number) => {
        //     // Pack files into a CAR and send to web3.storage
        console.log(images[imageIndex]);
        const rootCid = await client.put([images[imageIndex]['file']]); // Promise<CIDString>
        //     // Get info on the Filecoin deals that the CID is stored in
        const info = await client.status(rootCid); // Promise<Status | undefined>
        console.log('root CID:', rootCid);
        console.log('info:', info);
    };

    useEffect(() => {
        // Fetch and verify files from web3.storage

        const getPics = async () => {
            let imgUrls: string[] = [];
            for (var val of picsCIPs) {
                const res = await client.get(val); // Promise<Web3Response | null>
                if (res) {
                    const files = await res.files(); // Promise<Web3File[]>
                    console.log('files', files);
                    imgUrls = imgUrls.concat(
                        files.flatMap(
                            (file) => `https://${file.cid}.ipfs.dweb.link`
                        )
                    );
                }
            }
            setPics(imgUrls);
        };

        getPics();
    });

    return (
        <div className="flex flex-col h-screen">
            <Head>
                <title>Gallery</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <header className="p-4 bg-red-500 flex flex-row justify-between">
                <div>NAME </div>
                <div>
                    <ConnectButton
                    // chainStatus="none"
                    // showBalance={false}
                    // accountStatus="address"
                    />
                </div>
            </header>
            <main className="flex-grow bg-gray-200 p-4">
                <div className="w-3/5 mx-auto mt-32">
                    <h2 className="font-bold text-2xl text-center mb-2">
                        Your NFTs {id}
                    </h2>
                    <div className="w-full border-b-2 border-block border-black"></div>
                    <div className="mt-8 flex flex-row gap-8">
                        {pics &&
                            pics.map((image, index) => (
                                <div key={index} className="w-1/3">
                                    <div className="w-full">
                                        <Image
                                            src={`/api/imageproxy?url=${encodeURIComponent(
                                                image
                                            )}`}
                                            alt=""
                                            width="100%"
                                            height="100%"
                                            layout="responsive"
                                            objectFit="contain"
                                        />
                                    </div>
                                </div>
                            ))}
                    </div>

                    <h2 className="font-semibold text-2xl text-left mb-4 mt-16">
                        Add new pictures to the gallery
                    </h2>
                    <ImageUploading
                        multiple
                        value={images}
                        onChange={onChange}
                        maxNumber={10}
                        dataURLKey="data_url"
                    >
                        {({
                            imageList,
                            onImageUpload,
                            onImageRemoveAll,
                            onImageUpdate,
                            onImageRemove,
                            isDragging,
                            dragProps,
                        }) => (
                            // write your building UI
                            <div className="">
                                <div className="flex flex-row justify-between">
                                    <button
                                        className="text-xl rounded-md bg-blue-500 p-4 font-bold mb-4"
                                        style={
                                            isDragging
                                                ? { color: 'red' }
                                                : undefined
                                        }
                                        onClick={onImageUpload}
                                        {...dragProps}
                                    >
                                        Click or Drop here
                                    </button>
                                    <button
                                        className="text-xl rounded-md bg-red-500 p-4 font-bold mb-4"
                                        onClick={onImageRemoveAll}
                                    >
                                        Remove all images
                                    </button>
                                </div>

                                <div className="flex flex-row gap-8">
                                    {imageList.map((image, index) => (
                                        <div key={index} className="w-1/3">
                                            <div className="w-full">
                                                <Image
                                                    src={image['data_url']}
                                                    alt=""
                                                    width="100%"
                                                    height="100%"
                                                    layout="responsive"
                                                    objectFit="contain"
                                                />
                                            </div>

                                            <div className="flex flex-row justify-between p-2">
                                                <button
                                                    className="text-xl font-bold rounded-md text-green-500 bg-gray-300 p-2"
                                                    onClick={() =>
                                                        onImageUpdate(index)
                                                    }
                                                >
                                                    Update
                                                </button>
                                                <button
                                                    className="text-xl font-bold rounded-md text-red-500 bg-gray-300 p-2"
                                                    onClick={() =>
                                                        onImageRemove(index)
                                                    }
                                                >
                                                    Remove
                                                </button>
                                                <button
                                                    className="text-xl font-bold rounded-md text-blue-500 bg-gray-300 p-2"
                                                    onClick={() => {
                                                        uploadImage(index)
                                                            .then(() => {
                                                                console.log(
                                                                    'image upload successful'
                                                                );
                                                                onImageRemove(
                                                                    index
                                                                );
                                                            })
                                                            .catch(() => {
                                                                console.log(
                                                                    'upload failed'
                                                                );
                                                            });
                                                    }}
                                                >
                                                    Upload
                                                </button>
                                            </div>
                                        </div>
                                    ))}
                                </div>
                            </div>
                        )}
                    </ImageUploading>

                    <h2 className="font-semibold text-2xl text-left mb-4 mt-10">
                        Chat
                    </h2>
                </div>
            </main>
            <footer className="p-4 bg-blue-500">Footer</footer>
        </div>
    );
}
